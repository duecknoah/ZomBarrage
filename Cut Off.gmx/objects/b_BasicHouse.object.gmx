<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_b_2x2</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

// When true, object creates building parts and destroys self
// this object only exists in the initialization of the room
timeToSpawn = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wait for obj_roomObjectsInit to init this
/* Wait for obj_roomObjectsInit to order the object creation
 * from top left to bottom right, once that sets this timeToSpawn,
 * this object will then spawn the building parts when ordered, then delete itself
 */
if (timeToSpawn) {
    y -= 32; // fixes weird bug with building being too low
    // Create the building, then destroy self
    // Roof
    /* Adds the specific tiles to the room / map,
     * scr_getDepth() automatically sets the depth
     * of the tiles based on y height. The lower the
     * number, the closer to the camera. -2 is used
     * to make the tile seem above the player as it
     * is a roof
     */
    scr_addBackTile(27, x, y, 0, -1, scr_getDepth(y, -2, false));
    scr_addBackTile(28, x, y, 1, -1, scr_getDepth(y, -2, false));
    scr_addBackTile(25, x, y, 0, 0, scr_getDepth(y, -2, false));
    scr_addBackTile(26, x, y, 1, 0, scr_getDepth(y, -2, false));
    scr_addBackTile(21, x, y, 0, 1, scr_getDepth(y, -2, false)); 
    scr_addBackTile(22, x, y, 1, 1, scr_getDepth(y, -2, false));
    
    // Door
    scr_addBackTile(23, x, y, 0, 2, scr_getDepth(y, 0, false)); 
    scr_addBackTile(24, x, y, 1, 2, scr_getDepth(y, 0, false));
    
    // Collisions and shadows
    var yoff = 0.5;
    scr_addTileCollisionAndShadow(x, y, 0, yoff, 2, 2, 1, true);
    
    instance_destroy(); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
