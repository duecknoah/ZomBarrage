<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Holds all the data for all of the weapons in the game
weapon = ds_list_create();  // Holds all weapon data in game based off weapons.json

// If there is no json file there, create it
if (!file_exists("weapons.json")) {
    var initWeaponsFile = file_text_open_write("weapons.json");
    file_text_write_string(initWeaponsFile, 
    '[
        {
            "id": 0,
            "name": "fists",
            "ammo": 0
        },
        
        {
            "id": 1,
            "name": "Wimps Pistol",
            "ammo": 1024
        },
        
        {
            "id": 2,
            "name": "M16",
            "ammo": 512
        },
        
        {
            "id": 3,
            "name": "Rocket Launcher",
            "ammo": 10
        },
        
        {
            "id": 4,
            "name": "Flashlight",
            "ammo": 1
        },
        
        {
            "id": 5,
            "name": "Loot Key",
            "ammo": 1
        },
        
        {
            "id": 6,
            "name": "Sniper Rifle",
            "ammo": 32
        },
        
        {
            "id": 7,
            "name": "Molotov Cocktail",
            "ammo": 5
        },
        
        {
            "id": 8,
            "name": "Frag Grenade",
            "ammo": 8
        },
        
        {
            "id": 9,
            "name": "Iron Sword",
            "ammo": 1
        },
        
        {
            "id": 10,
            "name": "Chainsaw",
            "ammo": 105
        }
    ]'
    );
    file_text_close(initWeaponsFile);
}

// Load JSON
var theJsonFile = file_text_open_read("weapons.json");
var jsonStr = "";
// Gamemaker stores the ds_list within a map by default.
var defaultJsonDsMap = ds_map_create();

while (!file_text_eof(theJsonFile))
{
    jsonStr += file_text_read_string(theJsonFile);
    file_text_readln(theJsonFile);
}
file_text_close(theJsonFile);

defaultJsonDsMap = json_decode(jsonStr); // load json map
weapon = defaultJsonDsMap[? "default"]; // access the ds_list from within the map to use in game
totalWeapons = ds_list_size(weapon);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy dynamic data to free RAM
if (ds_exists(weapon, ds_type_list)) {
    ds_list_destroy(weapon);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy self
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
