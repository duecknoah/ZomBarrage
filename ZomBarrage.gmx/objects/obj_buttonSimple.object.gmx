<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_buttonMenu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_guiComponent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// This creates a simple button with text
event_inherited();
text = "PLACEHOLDER";
textCol = c_white;
pressed = false;
hovering = false;
image_index = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw text on the button
var w = sprite_get_width(sprite_index) * image_xscale;
var h = sprite_get_height(sprite_index) * image_yscale;
var val = scr_buttonGui(drawX, drawY, w, h);

switch (val) {
    case 2: 
        hovering = true;
        pressed = true;
    break;
    case 1:
        hovering = true;
        pressed = false;
    break;
    default:
        hovering = false;
        pressed = false;
}

switch (val) {
    case 0: 
        image_alpha = 0.5;
    break;
    case 1: 
        draw_set_blend_mode(bm_normal);
        image_alpha = 1;
    break;
    case 2: draw_set_blend_mode(bm_add);
        image_alpha = 1;
    break;
}

draw_sprite_ext(sprite_index, 0, drawX, drawY, image_xscale, image_yscale, 0, c_white, image_alpha);
draw_set_blend_mode(bm_normal);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_colour(textCol);
draw_text(drawX + (w / 2), drawY + (h / 2), text); // draw centered text
// reset settings after draw
draw_set_colour(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
