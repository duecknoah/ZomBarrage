<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_p_lampPost</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

// When true, object creates building parts and destroys self
// this object only exists in the initialization of the room
timeToSpawn = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wait for obj_roomObjectsInit to init this
/* Wait for obj_roomObjectsInit to order the object creation
 * from top left to bottom right, once that sets this timeToSpawn,
 * this object will then spawn the building parts when ordered, then delete itself
 */
if (timeToSpawn) {
    y -= 32; // fixes weird bug with building being too low
    x -= 16;
    y -= 16;
    // Create the building, then destroy self
    // Roof
    /* Adds the specific tiles to the room / map,
     * scr_getDepth() automatically sets the depth
     * of the tiles based on y height. The lower the
     * number, the closer to the camera. -2 is used
     * to make the tile seem above the player as it
     * is a roof
     */
    // Top and Bottom of light
    scr_addBackTile(48, x, y, 0, -1, scr_getDepth(y, -2, true)); 
    scr_addBackTile(47, x, y, 0, 0, scr_getDepth(y, 0, true));
    
    // Collisions
    with (instance_create(x, y, obj_collision)) {
        /* quarter the size of the collisions (a post is thin) 
         * and offset spawn position does by about half a tile x
         * and y wise
        */
        image_xscale /= 4;
        image_yscale /= 4;
        x += image_xscale * sprite_get_width(sprite_index) + 8;
        y += image_yscale * sprite_get_height(sprite_index) + 8;
    }
    
    //shadows
    var yoff = 0.5;
    with (instance_create(x, y - back_tile_height, obj_light)) {
        x += back_tile_width / 2;
        y += back_tile_height / 2;
        radius = 128 * 2.5; // the radius of the light
        orgRadius = radius;
        color = c_orange; // color of the light
        orgColor = color; // original color, used in fading out brightness of color
        parent = other; // parent instance to follow
        drawLightFlare = true;
    }
    
    instance_destroy(); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,96</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
