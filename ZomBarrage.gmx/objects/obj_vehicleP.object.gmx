<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_interactableP</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup vehicle variables
event_inherited();
maxVehicleSpd = 1; // max vehicle speed (per step)
vehicleAccel = 0.025; // acceleration spd per step
vehicleSpd = 0; // speed per step
path = noone; // no path by default
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If there is a path for the vehicle, go on it
event_inherited();
if (path_exists(path)) {
    if (path_index != noone) {
        path_speed = vehicleSpd * global.timeScale;
    }

    if (vehicleSpd &lt; maxVehicleSpd) {
        vehicleSpd += vehicleAccel;
    }
    // if entity is not being pushed, rotate based on move direction
    if (global.timeScale != 0) {
        //image_angle += ((point_direction(xprevious, yprevious, x, y) - 90) - image_angle) * 0.25;
        var xPathPrev = path_get_point_x(path, path_positionprevious);
        var yPathPrev = path_get_point_y(path, path_positionprevious);
        var xPath = path_get_point_x(path, path_position);
        var yPath = path_get_point_y(path, path_position);
        
        image_angle += ((direction - 90) - image_angle) * 0.25;
    }
}
else {
    vehicleSpd = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
