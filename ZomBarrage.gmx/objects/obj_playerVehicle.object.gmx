<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_miniTruck</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_miniTruck</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// setup vars and Make player start in this vehicle
// This is the vehicle used when the player enters the map
// and leaves the map and the end of the waves.
event_inherited();
scr_charInteract(obj_player, id); // make player go in vehicle
isLocked = true; // lock it up until at end of path
introPath = noone; // path used when entering the level, the path actually used is variable 'path' that copies off this when needed
outroPath = noone; // path used when exiting the level, the path actually used is variable 'path' that copies off this when needed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make player hop out of vehicle when at end of path
event_inherited();

// If at end of path, kick player out of vehicle, begin zombie spawning!
if (isLocked &amp;&amp; path_position == 1 &amp;&amp; interactEntity == obj_player) {
    isLocked = false; // unlock to get player out
    scr_charSeparate(obj_player, id);
    isLocked = true; // re-lock to prevent getting back in until end of mission
    
    // Allow spawning of zombies
    if (instance_exists(obj_waveController)) {
        obj_waveController.preventSpawn = false;
    }
    scr_reSave(obj_save.saveNum); // save state here
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Outro
// To set the intro, use creation code in the room on the player vehicle
// Unlock player vehicle when all waves completed
if (global.allWavesDone) {
    if (interactEntity != obj_player &amp;&amp; isLocked) {
        isLocked = false;
    }
    
    // If player is interacting with vehicle for the first time, start outropath
    if (interactEntity == obj_player &amp;&amp; path != outroPath) {
        path = outroPath;
        path_start(path, 0, 0, true);
        isLocked = true; // prevent player from getting out of outroscene
    }
}

// If at end of outro, go back to main menu level select, level complete!
if (path == outroPath &amp;&amp; path_position == 1) {
    scr_reSave(obj_save.saveNum); // save map and dynamic data
    scr_deleteMapSave(obj_save.saveNum); // Clear temporary map save, leaving only dynamic data
    room_goto(rm_Menu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>48,48</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>
